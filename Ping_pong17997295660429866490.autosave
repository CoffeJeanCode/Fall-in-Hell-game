 # add_library("serial")

# connection
# portIndex = 0
# myPort = Serial(this, Serial.list()[portIndex], 9600)

# Game
isPlaying = True
isGameOver = False
isPause = False

# Bar
xBar = 0
yBar = 0
sBar = 15
wBar = 0
hBar = 0 

# Ball
yBall = 0
xBall = 0
speedXBall = 0
speedYBall = 0
sizeBall = 0

# Point
points = 0

# Desing
gameGap = 10
ballImage = ""
pauseButtonImage = ""
backgroundImage = ""
upKeyUpImage = ""
downKeyUpImage = ""
leftKeyUpImage = ""
rightKeyUpImage = ""

def setup():
    global xBar, yBar, yBall, xBall, sBall, speedYBall, speedXBall, sizeBall, wBar, hBar, gameGap, ballImage, pauseButtonImage, backgroundImage, upKeyUpImage, downKeyUpImage, rightKeyUpImage, leftKeyUpImage
    size(800, 600)
    smooth(4)
    
    # Bar
    xBar = width / 2
    yBar = height / 1.2
    wBar = width / 5
    hBar = height / 20
    
    # Ball
    sizeBall = width / 20
    xBall = random(width - sizeBall)
    yBall = height / 4
    speedXBall = -3 if xBall > width / 2 else 3
    speedYBall = 3
    
    # Desing
    gameGap = width / 90
    ballImage = loadImage("./images/devil.png")
    pauseButtonImage = loadImage("./images/pausa.png")
    backgroundImage = loadImage("./images/background.jpg")
    upKeyUpImage = loadImage("./images/up.png")
    downKeyUpImage = loadImage("./images/down.png")
    rightKeyUpImage = loadImage("./images/right.png")
    leftKeyUpImage = loadImage("./images/left.png")

    # Connection
    # print("Lista", Serial.list())
    # myPort.bufferUntil(10)
    
    
def draw():
    global xBar, yBar, yBall, xBall, sBall, speedYBall, speedXBall, sizeBall, wBar, hBar, gameGap, points, isPlaying, isGameOver, pauseButtonImage, backgroundImage, ballImage, upKeyUpImage, downKeyUpImage, leftKeyUpImage, rightKeyUpImage
    
    # Background 
    background(0)
    tint(100)
    imageMode(CORNER)
    image(backgroundImage, 0, 0, width, height)
    
    noTint()
    
    # Ball
    fill(250,10,0)
    noStroke()
    image(ballImage, xBall, yBall, sizeBall, sizeBall)
    
    # Bar
    rectMode(CENTER)
    fill(255)
    noStroke()
    rect(xBar, yBar, wBar, hBar)

    
    # Game Points
    textSize(width / 15)
    textAlign(LEFT)
    text(str(points), width / 55, height / 10)
    
    # Pause
    if not isPlaying and isPause:
        imageMode(CENTER)
        image(pauseButtonImage, width / 2, height /2, width / 10, width / 10)

    if isPlaying and not isGameOver:
            
        xBall += speedXBall
        yBall += speedYBall

        # Right
        if xBall + sizeBall  >= width + gameGap:
            speedXBall = -speedXBall
            xBall = (width + gameGap) - sizeBall
            
        # Left
        elif xBall <= gameGap: 
            speedXBall = -speedXBall
            xBall = sizeBall - gameGap
            
        # Bottom
        if yBall + sizeBall > (height + gameGap):
            isPlaying = False
            isGameOver = True
            yBall = height - sizeBall
        
        # Top    
        elif (yBall <= gameGap):
            speedYBall = -speedYBall
            yBall = sizeBall - gameGap
            
            points += 1
            speedXBall += 0.3
            speedYBall += 0.3

    
        # Collition
        if xBall > xBar - wBar / 2 and xBall < xBar + wBar / 2 and yBall > yBar - sizeBall and yBall < yBar + sizeBall:
            speedYBall = -speedYBall
        
        # Limits bar
        if xBar > (width - gameGap) - wBar / 2:
            xBar = (width - gameGap) - wBar / 2
    
        if xBar < gameGap + wBar / 2:
            xBar = gameGap + wBar / 2
    
    # Gamer Over
    if isGameOver:
        textAlign(CENTER)
        textSize(30)
        strokeWeight(20)
        text("GAME OVER", width / 2, height /2)
        textSize(15)
        text("Presione ESPACIO para volver a jugar", width / 2, height / 1.7)
    
    # if myPort.available() > 0:
    #     val = myPort.read()
    #     if val == 65:
    #         xBar -= sBar
    #     if val == 66:
    #         xBar += sBar
    stroke(255)
    line(width / 2, 0, width / 2, height)
            
def keyPressed():
    global xBar, sBar, isPlaying, isGameOver, isPause

    if isPlaying:
        if keyCode == LEFT:
            xBar -= sBar
        if keyCode == RIGHT:
            xBar += sBar
    if not isGameOver:
        if keyCode == DOWN:
            isPlaying = False
            isPause = True
        if keyCode == UP:
            isPlaying = True
            isPause = False
    if keyCode == 32 and isGameOver:
        resetGame()
        

def resetGame():
    global xBar, yBar, yBall, xBall, sBall, speedYBall, speedXBall, sizeBall, wBar, hBar, gameGap, ballImage, pauseButtonImage, backgroundImage, isGameOver, isPause, isPlaying, points
    
    xBar = width / 2
    yBar = height / 1.2
    wBar = width / 5
    hBar = height / 20
    
    
    sizeBall = width / 20
    xBall = random(width - sizeBall)
    yBall = height / 4
    speedXBall = -3 if xBall > width / 2 else 3
    speedYBall = 3
    
    gameGap = width / 80
    ballImage = loadImage("./images/devil.png")
    pauseButtonImage = loadImage("./images/pausa.png")
    backgroundImage = loadImage("./images/background.jpg")
    isGameOver = False
    
    points = 0
